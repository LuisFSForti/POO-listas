Versão do G++:
g++ (Debian 12.2.0-14) 12.2.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Varificando data de envio...
AGORA: 2024-12-11 20:52:14.016224-03:00
PRAZO MÁXIMO: 2024-12-17 23:59:59-03:06
Testando sua solucao...
Procurando exercício 1...
Exercício 1...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex1.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 1: 1.0
Procurando exercício 2...
Exercício 2...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex2.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 2: 1.0
Procurando exercício 3...
Exercício 3...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex3.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 3: 1.0
Procurando exercício 4...
Exercício 4...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex4.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 4: 1.0
Procurando exercício 5...
Exercício 5...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex5.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3 deu errado!
O resultado para
#include<iostream>
int main() {
    Matriz A, B;
   A[{-1,-1}] = 10;
   B[{-1,-1}] = 10;
   A[{6,3}] = -9;
   A[{6,9}] = 7;
   B[{6,9}] = 2;
   A[{0,7}] = -1;
   A[{1,8}] = 3;
   B[{1,8}] = -3;
   A[{9,9}] = 3;
   B[{9,9}] = 5;

    Matriz C = soma(A, B);
    for(const auto& [k, v] : C)
        std::cout << k.first << " " << k.second << " "
                    << v << std::endl;
    return 0;
}
deveria ser
-1 -1 10
6 3 -9
6 9 9
0 7 -1
9 9 8

mas deu
-1 -1 10
0 7 -1
1 8 0
6 3 -9
6 9 9
9 9 8

Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 5: 1.0
Procurando exercício 6...
Exercício 6...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex6.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 6: 1.0
Procurando exercício 7...
Exercício 7...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex7.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 7: 1.0
Procurando exercício 8...
Exercício 8...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex8.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 8: 1.0
Procurando exercício 9...
Exercício 9...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex9.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 9: 1.0
Procurando exercício 10...
Exercício 10...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex10.cpp" 
Teste 1: correto! +0.050
Teste 2 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
66.6.93
79.90.54.8
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
4
5.10
5.29.1.6
71.71.6
65
4.93
1.96
82.8.3
4.93.26
8.54.1.47
36.3.49
7.7.61
5.29.1.6
5.29.1.6.5
4.93.8
79.90.54.8.1
1.62.4.42
4.93.26
79.90.54.8.1
4.7.2.7
82.8.3
57.63
4
79.90.54.8.1.54
11.34
57.63
83.34.5.30
9.8
5
4.38
4.64
33.6.2.8
79.90.54.8.1.54.2
67
5
90.1
49.13
11.91.9
4
4
4
1.62.4.42
9.2.1.10
57.63.13
4.93.26.79
7.8
90.1
4.4
9.8
71.71.6.73
9.3
72.7.1.31
8.54.1.47
4
79.90.54.8.1.14
4.38.9
39.5
1.1.56
22.13
4.93.26.79
82.8.3
79.90.54.8.1
92
71.71.6.8
67.81
63
46.30.3.39
1.20
5.29.1.6
9.2.1.10
54
79.90.54.8.1.14
71.71.6.8
deveria ser
1.1.56
1.20
1.62.4.42
1.62.4.42
1.96
4
4
4
4
4
4
4.4
4.7.2.7
4.38
4.38.9
4.64
4.93
4.93.8
4.93.26
4.93.26
4.93.26.79
4.93.26.79
5
5
5.10
5.29.1.6
5.29.1.6
5.29.1.6
5.29.1.6.5
7.7.61
7.8
8.54.1.47
8.54.1.47
9.2.1.10
9.2.1.10
9.3
9.8
9.8
11.34
11.91.9
22.13
33.6.2.8
36.3.49
39.5
46.30.3.39
49.13
54
57.63
57.63
57.63.13
63
65
66.6.93
67
67.81
71.71.6
71.71.6.8
71.71.6.8
71.71.6.73
72.7.1.31
79.90.54.8
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1.14
79.90.54.8.1.14
79.90.54.8.1.54
79.90.54.8.1.54.2
82.8.3
82.8.3
82.8.3
83.34.5.30
90.1
90.1
92
mas deu
1.1.56
1.20
1.62.4.42
1.62.4.42
1.96
11.34
11.91.9
22.13
33.6.2.8
36.3.49
39.5
4
4
4
4
4
4
4.38
4.38.9
4.4
4.64
4.7.2.7
4.93
4.93.26
4.93.26
4.93.26.79
4.93.26.79
4.93.8
46.30.3.39
49.13
5
5
5.10
5.29.1.6
5.29.1.6
5.29.1.6
5.29.1.6.5
54
57.63
57.63
57.63.13
63
65
66.6.93
67
67.81
7.7.61
7.8
71.71.6
71.71.6.73
71.71.6.8
71.71.6.8
72.7.1.31
79.90.54.8
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1
79.90.54.8.1.14
79.90.54.8.1.14
79.90.54.8.1.54
79.90.54.8.1.54.2
8.54.1.47
8.54.1.47
82.8.3
82.8.3
82.8.3
83.34.5.30
9.2.1.10
9.2.1.10
9.3
9.8
9.8
90.1
90.1
92

Teste 3 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
8.71.3
10.88
8.71.3.58
8.71.3.65
8.7
62.41.33.3
8.7
8.71.3.58.7
16.3.5.27
4.7.29.8
8.71.3.65.1
61
62.41.33.3.8
62.41.33.3.8
89.8.54.88
8.3
62.41.33.3.99
62.41.33.3.99.13
81.73.3.43
92.80.1.2
81.73.3.43
7.9
3
81.73.3.43.6
9.31.6
3.9.46.89
62.41.33.3.99
4.7.29.8.90
6
91.64.6
3.9.46.89
8.7.55
8.92
8
91.64.6
8.71.3.65.3
7
47.61
9.31.6
8.71.3.58
8.86
8.7.95
9.3.94.7
89.17.38
7.80.4.93
35.38
2.8.76.1
91.64.6
2.8.76.1
47.26.43
2.81.77
8.71.3.58.7.56
3.3.99.39
10.88.3
77
8.71.3.65.80
31.9
8.71.3.65.80.57
34
9.53.2.8
10.88.35
56
9.9.43
2.8.76.1.70
2.65.51.7
62.41.33.3.8.35
27.9.39.98
8.71.3.58.7
9.31.6.7
25
1.73.51
3.45.5
31.9.42
2.8.76.1.9
81.73.3.43.6.41
6.2.6
3.45.5.5
43.4.43.6
9
3.9.46.89.35
8.71.3.66
62.41.33.3.8.7
7.9.8
48.44
80.5
51.8.2.1
deveria ser
1.73.51
2.8.76.1
2.8.76.1
2.8.76.1.9
2.8.76.1.70
2.65.51.7
2.81.77
3
3.3.99.39
3.9.46.89
3.9.46.89
3.9.46.89.35
3.45.5
3.45.5.5
4.7.29.8
4.7.29.8.90
6
6.2.6
7
7.9
7.9.8
7.80.4.93
8
8.3
8.7
8.7
8.7.55
8.7.95
8.71.3
8.71.3.58
8.71.3.58
8.71.3.58.7
8.71.3.58.7
8.71.3.58.7.56
8.71.3.65
8.71.3.65.1
8.71.3.65.3
8.71.3.65.80
8.71.3.65.80.57
8.71.3.66
8.86
8.92
9
9.3.94.7
9.9.43
9.31.6
9.31.6
9.31.6.7
9.53.2.8
10.88
10.88.3
10.88.35
16.3.5.27
25
27.9.39.98
31.9
31.9.42
34
35.38
43.4.43.6
47.26.43
47.61
48.44
51.8.2.1
56
61
62.41.33.3
62.41.33.3.8
62.41.33.3.8
62.41.33.3.8.7
62.41.33.3.8.35
62.41.33.3.99
62.41.33.3.99
62.41.33.3.99.13
77
80.5
81.73.3.43
81.73.3.43
81.73.3.43.6
81.73.3.43.6.41
89.8.54.88
89.17.38
91.64.6
91.64.6
91.64.6
92.80.1.2
mas deu
1.73.51
10.88
10.88.3
10.88.35
16.3.5.27
2.65.51.7
2.8.76.1
2.8.76.1
2.8.76.1.70
2.8.76.1.9
2.81.77
25
27.9.39.98
3
3.3.99.39
3.45.5
3.45.5.5
3.9.46.89
3.9.46.89
3.9.46.89.35
31.9
31.9.42
34
35.38
4.7.29.8
4.7.29.8.90
43.4.43.6
47.26.43
47.61
48.44
51.8.2.1
56
6
6.2.6
61
62.41.33.3
62.41.33.3.8
62.41.33.3.8
62.41.33.3.8.35
62.41.33.3.8.7
62.41.33.3.99
62.41.33.3.99
62.41.33.3.99.13
7
7.80.4.93
7.9
7.9.8
77
8
8.3
8.7
8.7
8.7.55
8.7.95
8.71.3
8.71.3.58
8.71.3.58
8.71.3.58.7
8.71.3.58.7
8.71.3.58.7.56
8.71.3.65
8.71.3.65.1
8.71.3.65.3
8.71.3.65.80
8.71.3.65.80.57
8.71.3.66
8.86
8.92
80.5
81.73.3.43
81.73.3.43
81.73.3.43.6
81.73.3.43.6.41
89.17.38
89.8.54.88
9
9.3.94.7
9.31.6
9.31.6
9.31.6.7
9.53.2.8
9.9.43
91.64.6
91.64.6
91.64.6
92.80.1.2

Teste 4 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
7.16.89.9
7.16.89.9
4.64.85
4.64.85.28
6.15
8.25.8.91
2.62.7
8.25.8.91.21
7.16.89.9
4.64.85.28
4.17.95.63
4.17.95.63
4.92
39
7.16.89.9.2
2.62.7.5
8.25.8.91
2.62.7.11
4.17.95.63
2.62.7.11
82
38.1
6.84
38.1
3
7.16.89.9
4.64.85.28.43
8.25.8.91.47
39
8.25.8.91.59
6.93
2.29.44
8.25.8.91.21.1
79.12.9
4.92.34
65.2.4.7
7.16.89.9
4.64.85.28
8.25.8.91.21.1
9.1.3
66.77.55
9.27.77
2.62.7.3
16.3
76.9
4.17.95.63.8
4.40.81.90
4.40.81.90
47.6.1.6
17.58.92
82
9.22
51.2.84
7.80.7.9
54.47
7
9.9.4
69.9.70.9
4.92
79.12.9
9.21.79.61
4.40.81.90.4
28.55.83.48
17.58.92.8
6.93
7.7.2
4.17.95.63.4
1.3.58.9
9.1.3
58.5.4.4
90
82.1.2
9.22.67
3.6
9.27.77.84
39
4.64.85.84
65.2.4.7
42.6.9.45
4.17.95.63.8.68
2.8
28.55.83.48
3.2.28.4
41
6.93
51.2.84.3
2.8
3.2.28.4
6.56
9.22
6.15
3.6.48.7
74.4
4.46
6.77.55
9
41.92.6
8.25.8.91
71
7.16.89.9.2.86
7.3.23.7
82.1.2
9.4
4.64.85.28.7
39
21
90
2.62.7.11.48
2.84
2.9.1.2
41.92.6
67
6.77.55
21
3.5.7
9.9.4.53
9.48.27.96
9.96.6.3
43.71.20
39
9.22.67
3
97
91.5.51
82.1.2.28
8.7.50
74.23
1.7.3.7
11.47.9
1.61.5.8
7.16.89.9
16
8.25.8.91.21
36.63.25
4.64.85.28.7.8
75.5.72.46
51.2.84.6
6.77.55.3
77
6.7.77
2.9.1.2
65.2.4.7
deveria ser
1.3.58.9
1.7.3.7
1.61.5.8
2.8
2.8
2.9.1.2
2.9.1.2
2.29.44
2.62.7
2.62.7.3
2.62.7.5
2.62.7.11
2.62.7.11
2.62.7.11.48
2.84
3
3
3.2.28.4
3.2.28.4
3.5.7
3.6
3.6.48.7
4.17.95.63
4.17.95.63
4.17.95.63
4.17.95.63.4
4.17.95.63.8
4.17.95.63.8.68
4.40.81.90
4.40.81.90
4.40.81.90.4
4.46
4.64.85
4.64.85.28
4.64.85.28
4.64.85.28
4.64.85.28.7
4.64.85.28.7.8
4.64.85.28.43
4.64.85.84
4.92
4.92
4.92.34
6.7.77
6.15
6.15
6.56
6.77.55
6.77.55
6.77.55.3
6.84
6.93
6.93
6.93
7
7.3.23.7
7.7.2
7.16.89.9
7.16.89.9
7.16.89.9
7.16.89.9
7.16.89.9
7.16.89.9
7.16.89.9.2
7.16.89.9.2.86
7.80.7.9
8.7.50
8.25.8.91
8.25.8.91
8.25.8.91
8.25.8.91.21
8.25.8.91.21
8.25.8.91.21.1
8.25.8.91.21.1
8.25.8.91.47
8.25.8.91.59
9
9.1.3
9.1.3
9.4
9.9.4
9.9.4.53
9.21.79.61
9.22
9.22
9.22.67
9.22.67
9.27.77
9.27.77.84
9.48.27.96
9.96.6.3
11.47.9
16
16.3
17.58.92
17.58.92.8
21
21
28.55.83.48
28.55.83.48
36.63.25
38.1
38.1
39
39
39
39
39
41
41.92.6
41.92.6
42.6.9.45
43.71.20
47.6.1.6
51.2.84
51.2.84.3
51.2.84.6
54.47
58.5.4.4
65.2.4.7
65.2.4.7
65.2.4.7
66.77.55
67
69.9.70.9
71
74.4
74.23
75.5.72.46
76.9
77
79.12.9
79.12.9
82
82
82.1.2
82.1.2
82.1.2.28
90
90
91.5.51
97
mas deu
1.3.58.9
1.61.5.8
1.7.3.7
11.47.9
16
16.3
17.58.92
17.58.92.8
2.29.44
2.62.7
2.62.7.11
2.62.7.11
2.62.7.11.48
2.62.7.3
2.62.7.5
2.8
2.8
2.84
2.9.1.2
2.9.1.2
21
21
28.55.83.48
28.55.83.48
3
3
3.2.28.4
3.2.28.4
3.5.7
3.6
3.6.48.7
36.63.25
38.1
38.1
39
39
39
39
39
4.17.95.63
4.17.95.63
4.17.95.63
4.17.95.63.4
4.17.95.63.8
4.17.95.63.8.68
4.40.81.90
4.40.81.90
4.40.81.90.4
4.46
4.64.85
4.64.85.28
4.64.85.28
4.64.85.28
4.64.85.28.43
4.64.85.28.7
4.64.85.28.7.8
4.64.85.84
4.92
4.92
4.92.34
41
41.92.6
41.92.6
42.6.9.45
43.71.20
47.6.1.6
51.2.84
51.2.84.3
51.2.84.6
54.47
58.5.4.4
6.15
6.15
6.56
6.7.77
6.77.55
6.77.55
6.77.55.3
6.84
6.93
6.93
6.93
65.2.4.7
65.2.4.7
65.2.4.7
66.77.55
67
69.9.70.9
7
7.16.89.9
7.16.89.9
7.16.89.9
7.16.89.9
7.16.89.9
7.16.89.9
7.16.89.9.2
7.16.89.9.2.86
7.3.23.7
7.7.2
7.80.7.9
71
74.23
74.4
75.5.72.46
76.9
77
79.12.9
79.12.9
8.25.8.91
8.25.8.91
8.25.8.91
8.25.8.91.21
8.25.8.91.21
8.25.8.91.21.1
8.25.8.91.21.1
8.25.8.91.47
8.25.8.91.59
8.7.50
82
82
82.1.2
82.1.2
82.1.2.28
9
9.1.3
9.1.3
9.21.79.61
9.22
9.22
9.22.67
9.22.67
9.27.77
9.27.77.84
9.4
9.48.27.96
9.9.4
9.9.4.53
9.96.6.3
90
90
91.5.51
97

Teste 5 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
4
4
10.3.70.9
49.41.70.91
2.36.90.48
10.3.70.9.25
52.72.4
4.62.83.28
71.9.77
10.3.70.9.90
39
33
49.41.70.91.6
5
49.41.70.91.6
8
4.62.83.28
49.41.70.91.6.64
1
71.9.77.7
4.62.83.28.43
56.5.5.7
3.69.79
10.3.70.9.25.2
2.4.18.19
47
61
10.3.70.9
2.36.90.48
49.41.70.91.6
4.73.19.4
4
8.77.2.6
61
2.36.90.48
33.9
93
4.9.71
61.6
51.27.91.2
4.62.83.28.65
4.63
39.8
39.8
10.3.70.9.8
97.9.5
83.1.19
92
30
88.8.3
8.45
5.9.44.86
16
3.77.11
3
4.62.83.28.65.6
7.6
52.72.4
27.39.7
37.72.2.9
56.5.5.7
1
61.6
9
2.36.90.48
33.89
61.6
3.69.79.33
8.45.43
4.9.71
8
7.94.23.96
50.35.2.70
4.2
8.45.43.19
1.63
17.50.8.17
5.1.7.5
3.77.11.2
39.8.6
94
83.1.19
13.4.82
13.4.82.91
8.5
3.77.11
61.6
4.62.83.28.43
7.6
94.12.59.86
71.69
49.41.70.91.6
10.3.70.9.90.3
10.3.70.9
4
51.86
22.4.1.7
21.6.56.6
49.41.70.91.6.64
71.9.77.7
4.9.71
2
4.6.5
49.41.70.91
7.7
49.41.70.91.5
23.73.29.94
10.12.47
40
5.9.44.86.4
10.3.70.9
50.35.2.70.79
6.18
91.68.8
4.5
13.4.82.69
9
5.60.35.7
5.60.35.7.20
7.92
1
26
44
43.95
7
61
8.77.2.6
8.45.43.19
2
7.9.81.4
5.8
7.92.7
2.2.98.2
19
4.9
20.57
49.41.70.91.6
49.9.44.2
49.41.70.91.5.72
61.26
4.42
97.8.1
1.44
49.41.70.91.6.64
8.5
4.9.71
17.50.8.17
2.2.13
37.72.2.9
13.4.82.91
10.3.70.9.25.2.5
10.12.47.7
62.9.33.79
92.87
4.9.9
1.88
21.7.91
1.63.3
49.41.70.91.6
5.8
56.5.5.7
3.8.56
6.8.80
99
4
10.3.70.9.25
58
deveria ser
1
1
1
1.44
1.63
1.63.3
1.88
2
2
2.2.13
2.2.98.2
2.4.18.19
2.36.90.48
2.36.90.48
2.36.90.48
2.36.90.48
3
3.8.56
3.69.79
3.69.79.33
3.77.11
3.77.11
3.77.11.2
4
4
4
4
4
4.2
4.5
4.6.5
4.9
4.9.9
4.9.71
4.9.71
4.9.71
4.9.71
4.42
4.62.83.28
4.62.83.28
4.62.83.28.43
4.62.83.28.43
4.62.83.28.65
4.62.83.28.65.6
4.63
4.73.19.4
5
5.1.7.5
5.8
5.8
5.9.44.86
5.9.44.86.4
5.60.35.7
5.60.35.7.20
6.8.80
6.18
7
7.6
7.6
7.7
7.9.81.4
7.92
7.92.7
7.94.23.96
8
8
8.5
8.5
8.45
8.45.43
8.45.43.19
8.45.43.19
8.77.2.6
8.77.2.6
9
9
10.3.70.9
10.3.70.9
10.3.70.9
10.3.70.9
10.3.70.9.8
10.3.70.9.25
10.3.70.9.25
10.3.70.9.25.2
10.3.70.9.25.2.5
10.3.70.9.90
10.3.70.9.90.3
10.12.47
10.12.47.7
13.4.82
13.4.82.69
13.4.82.91
13.4.82.91
16
17.50.8.17
17.50.8.17
19
20.57
21.6.56.6
21.7.91
22.4.1.7
23.73.29.94
26
27.39.7
30
33
33.9
33.89
37.72.2.9
37.72.2.9
39
39.8
39.8
39.8.6
40
43.95
44
47
49.9.44.2
49.41.70.91
49.41.70.91
49.41.70.91.5
49.41.70.91.5.72
49.41.70.91.6
49.41.70.91.6
49.41.70.91.6
49.41.70.91.6
49.41.70.91.6
49.41.70.91.6
49.41.70.91.6.64
49.41.70.91.6.64
49.41.70.91.6.64
50.35.2.70
50.35.2.70.79
51.27.91.2
51.86
52.72.4
52.72.4
56.5.5.7
56.5.5.7
56.5.5.7
58
61
61
61
61.6
61.6
61.6
61.6
61.26
62.9.33.79
71.9.77
71.9.77.7
71.9.77.7
71.69
83.1.19
83.1.19
88.8.3
91.68.8
92
92.87
93
94
94.12.59.86
97.8.1
97.9.5
99
mas deu
1
1
1
1.44
1.63
1.63.3
1.88
10.12.47
10.12.47.7
10.3.70.9
10.3.70.9
10.3.70.9
10.3.70.9
10.3.70.9.25
10.3.70.9.25
10.3.70.9.25.2
10.3.70.9.25.2.5
10.3.70.9.8
10.3.70.9.90
10.3.70.9.90.3
13.4.82
13.4.82.69
13.4.82.91
13.4.82.91
16
17.50.8.17
17.50.8.17
19
2
2
2.2.13
2.2.98.2
2.36.90.48
2.36.90.48
2.36.90.48
2.36.90.48
2.4.18.19
20.57
21.6.56.6
21.7.91
22.4.1.7
23.73.29.94
26
27.39.7
3
3.69.79
3.69.79.33
3.77.11
3.77.11
3.77.11.2
3.8.56
30
33
33.89
33.9
37.72.2.9
37.72.2.9
39
39.8
39.8
39.8.6
4
4
4
4
4
4.2
4.42
4.5
4.6.5
4.62.83.28
4.62.83.28
4.62.83.28.43
4.62.83.28.43
4.62.83.28.65
4.62.83.28.65.6
4.63
4.73.19.4
4.9
4.9.71
4.9.71
4.9.71
4.9.71
4.9.9
40
43.95
44
47
49.41.70.91
49.41.70.91
49.41.70.91.5
49.41.70.91.5.72
49.41.70.91.6
49.41.70.91.6
49.41.70.91.6
49.41.70.91.6
49.41.70.91.6
49.41.70.91.6
49.41.70.91.6.64
49.41.70.91.6.64
49.41.70.91.6.64
49.9.44.2
5
5.1.7.5
5.60.35.7
5.60.35.7.20
5.8
5.8
5.9.44.86
5.9.44.86.4
50.35.2.70
50.35.2.70.79
51.27.91.2
51.86
52.72.4
52.72.4
56.5.5.7
56.5.5.7
56.5.5.7
58
6.18
6.8.80
61
61
61
61.26
61.6
61.6
61.6
61.6
62.9.33.79
7
7.6
7.6
7.7
7.9.81.4
7.92
7.92.7
7.94.23.96
71.69
71.9.77
71.9.77.7
71.9.77.7
8
8
8.45
8.45.43
8.45.43.19
8.45.43.19
8.5
8.5
8.77.2.6
8.77.2.6
83.1.19
83.1.19
88.8.3
9
9
91.68.8
92
92.87
93
94
94.12.59.86
97.8.1
97.9.5
99

Teste 6 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
5
1
8.34
4.71.66.54
56.54.65
8.34
8.34
4.71.66.54
4.71.66.54
5.2.34
7.72.7
1
7.72.7.38
2
1.80
2.9.52
2.83
3.21.51
9
4.71.66.54
1.80.9
4.44.95.29
80.89.4.4
63.33.53
3
1
8
2.83.73
36.9.5
5.2.34
8.83.9
24.81
4.71.66.54.4
8
2
4.71.66.54.4
80.89.4.4
36.9.5
8.83.9
80.89.4.4
80.89.4.4.66
2.9
8.71
3
56.54.65
4.44.95.29.2
36.9.5
5.2.34.9
3.3
2.83.3
4.71.66.54.9
67
5.2.34
80.89.4.4.23
29
36.9.5.95
41
80.89.4.4.66.8
8.34.5
1
4.44.95.29.88
8.40
9.5.69
5.2.34
56.54.65
2.9
1
2.9.9
65.49.9.72
86.65
67.84
32.9.55.18
8.3
1.41
9.9
86.65.3
7.72.7
1.80.9
5.2.34.17
5.2.34.6
60
6.29
9.9
67
3.57.52.4
67.31
57.8.3.5
5.2.34.90
3
44.8.3
99
1.5
99
8.17.46
1.80.9
8.20.32
2.56
24.81.11
8
2.71.90.9
4.44.95.29.88
40
8.8
44.6.6
64.72.9.8
3.23.68
18.32.7.36
5.2.34.6
16
77.8
8.34.5.37
67.10
1.41
4.44.95.29.88
8.83.9
18.32.7.36
3.21.51
14.42.43
8.83.9
6
14.42.43
4
76.40.5.16
81.7.6
4.5
41.94
1.7
25.29.7
48
1.4.7
1.80.55
5.55.1
8.34
5.2.34.52
15.5
60.9.2.44
5.2.34.8
1.80.55
7.6.1.89
5.2.34.7
9
7.3.45
8
76.40.5.16.5
86.65.20
9.70
7
80.89.4.4.23.67
9
8.9
6.2
1.8.61
7
4.71.66.54.31
57.8.3.5.6
5.2
88
51.31.60
29.91.4.24
80.89.4.4.14
1.80.55.32
8.6
83.5.87
2.46
80.89.4.4
1
61.18
76.40.5.16.5.4
3.28.49
89
87.2.5
80.89.4.4.14
2.6
6.1
98.7.78
56.54.65
32
86.65.70
9.66
8.20.32.7
56.54.65.4
4.71
5.46
5.2.34.6.82
80.89.4.4.80
60.9.2.44
6
4.44.95.29.88.7
deveria ser
1
1
1
1
1
1
1.4.7
1.5
1.7
1.8.61
1.41
1.41
1.80
1.80.9
1.80.9
1.80.9
1.80.55
1.80.55
1.80.55.32
2
2
2.6
2.9
2.9
2.9.9
2.9.52
2.46
2.56
2.71.90.9
2.83
2.83.3
2.83.73
3
3
3
3.3
3.21.51
3.21.51
3.23.68
3.28.49
3.57.52.4
4
4.5
4.44.95.29
4.44.95.29.2
4.44.95.29.88
4.44.95.29.88
4.44.95.29.88
4.44.95.29.88.7
4.71
4.71.66.54
4.71.66.54
4.71.66.54
4.71.66.54
4.71.66.54.4
4.71.66.54.4
4.71.66.54.9
4.71.66.54.31
5
5.2
5.2.34
5.2.34
5.2.34
5.2.34
5.2.34.6
5.2.34.6
5.2.34.6.82
5.2.34.7
5.2.34.8
5.2.34.9
5.2.34.17
5.2.34.52
5.2.34.90
5.46
5.55.1
6
6
6.1
6.2
6.29
7
7
7.3.45
7.6.1.89
7.72.7
7.72.7
7.72.7.38
8
8
8
8
8.3
8.6
8.8
8.9
8.17.46
8.20.32
8.20.32.7
8.34
8.34
8.34
8.34
8.34.5
8.34.5.37
8.40
8.71
8.83.9
8.83.9
8.83.9
8.83.9
9
9
9
9.5.69
9.9
9.9
9.66
9.70
14.42.43
14.42.43
15.5
16
18.32.7.36
18.32.7.36
24.81
24.81.11
25.29.7
29
29.91.4.24
32
32.9.55.18
36.9.5
36.9.5
36.9.5
36.9.5.95
40
41
41.94
44.6.6
44.8.3
48
51.31.60
56.54.65
56.54.65
56.54.65
56.54.65
56.54.65.4
57.8.3.5
57.8.3.5.6
60
60.9.2.44
60.9.2.44
61.18
63.33.53
64.72.9.8
65.49.9.72
67
67
67.10
67.31
67.84
76.40.5.16
76.40.5.16.5
76.40.5.16.5.4
77.8
80.89.4.4
80.89.4.4
80.89.4.4
80.89.4.4
80.89.4.4.14
80.89.4.4.14
80.89.4.4.23
80.89.4.4.23.67
80.89.4.4.66
80.89.4.4.66.8
80.89.4.4.80
81.7.6
83.5.87
86.65
86.65.3
86.65.20
86.65.70
87.2.5
88
89
98.7.78
99
99
mas deu
1
1
1
1
1
1
1.4.7
1.41
1.41
1.5
1.7
1.8.61
1.80
1.80.55
1.80.55
1.80.55.32
1.80.9
1.80.9
1.80.9
14.42.43
14.42.43
15.5
16
18.32.7.36
18.32.7.36
2
2
2.46
2.56
2.6
2.71.90.9
2.83
2.83.3
2.83.73
2.9
2.9
2.9.52
2.9.9
24.81
24.81.11
25.29.7
29
29.91.4.24
3
3
3
3.21.51
3.21.51
3.23.68
3.28.49
3.3
3.57.52.4
32
32.9.55.18
36.9.5
36.9.5
36.9.5
36.9.5.95
4
4.44.95.29
4.44.95.29.2
4.44.95.29.88
4.44.95.29.88
4.44.95.29.88
4.44.95.29.88.7
4.5
4.71
4.71.66.54
4.71.66.54
4.71.66.54
4.71.66.54
4.71.66.54.31
4.71.66.54.4
4.71.66.54.4
4.71.66.54.9
40
41
41.94
44.6.6
44.8.3
48
5
5.2
5.2.34
5.2.34
5.2.34
5.2.34
5.2.34.17
5.2.34.52
5.2.34.6
5.2.34.6
5.2.34.6.82
5.2.34.7
5.2.34.8
5.2.34.9
5.2.34.90
5.46
5.55.1
51.31.60
56.54.65
56.54.65
56.54.65
56.54.65
56.54.65.4
57.8.3.5
57.8.3.5.6
6
6
6.1
6.2
6.29
60
60.9.2.44
60.9.2.44
61.18
63.33.53
64.72.9.8
65.49.9.72
67
67
67.10
67.31
67.84
7
7
7.3.45
7.6.1.89
7.72.7
7.72.7
7.72.7.38
76.40.5.16
76.40.5.16.5
76.40.5.16.5.4
77.8
8
8
8
8
8.17.46
8.20.32
8.20.32.7
8.3
8.34
8.34
8.34
8.34
8.34.5
8.34.5.37
8.40
8.6
8.71
8.8
8.83.9
8.83.9
8.83.9
8.83.9
8.9
80.89.4.4
80.89.4.4
80.89.4.4
80.89.4.4
80.89.4.4.14
80.89.4.4.14
80.89.4.4.23
80.89.4.4.23.67
80.89.4.4.66
80.89.4.4.66.8
80.89.4.4.80
81.7.6
83.5.87
86.65
86.65.20
86.65.3
86.65.70
87.2.5
88
89
9
9
9
9.5.69
9.66
9.70
9.9
9.9
98.7.78
99
99

Teste 7 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
4.6.7.87
4.6.7.87
4.6.7.87
93.97.60
4.6.7.87
74
22.8.3.32
4.6.7.87
4.6.7.87
2.9.9.99
93.97.60
39.68
12
4.6.7.87
12.5
53.9.4.90
7.8
2.44.5
4.6.7.87.87
25.25
55.5.7
4.6.7.87
74.4
5
25.25.86
9.5.84
93.97.60.93
8.16.71
32.14.1
93.97.60.33
4.6.7.87
12.5.6
4.6.7.87
deveria ser
2.9.9.99
2.44.5
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87.87
5
7.8
8.16.71
9.5.84
12
12.5
12.5.6
22.8.3.32
25.25
25.25.86
32.14.1
39.68
53.9.4.90
55.5.7
74
74.4
93.97.60
93.97.60
93.97.60.33
93.97.60.93
mas deu
12
12.5
12.5.6
2.44.5
2.9.9.99
22.8.3.32
25.25
25.25.86
32.14.1
39.68
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87
4.6.7.87.87
5
53.9.4.90
55.5.7
7.8
74
74.4
8.16.71
9.5.84
93.97.60
93.97.60
93.97.60.33
93.97.60.93

Teste 8 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
8.81.22.8
74.1.60.57
1.96
6.5.7
20.4.64.4
63.1.98.17
4
63.1.98.17.7
63.1.98.17
6.53.19
1.96
74.1.60.57.6
74.1.60.57
6.5.7
5.65
20.4.64.4
63.1.98.17.7
8.1.91
6.53.19
8.1.91.7
6.5.7.79
5.1
6.53.19
63.1.98.17.7
6.5.7.79
95.8.8.79
33
5.65.80
61.8
12
19
8.1.91.7
8.1.91.7.39
1.96
5.65.15
8.1.91.7
9
63.1.98.17.7.9
63.1.98.17.7
6.53.19.1
2.30
6.53.19.1.24
6.5.7.43
1.96.22
59
86.98.30.79
2.30.65
9.20
8.1.91.7
14.2
9.84.1
95.8.8.79
7
6.53.19
63.29
5.65.80.5
59.73.33.2
6.5.7
20.4.64.4.12
6.53.19.1.24.49
5.65.15
96.5.33.9
2.30.65.37
8.1.91.7
9
1.96
1.96.77
72.6.56
8.7.63.8
28
8.12.88.56
19.89
4.2.57.92
20.4.64.4.12.7
8.1.91.7.3
9
1.96.22.34
63.1.98.17.7.68
84.56.8.5
7.5.82.8
5.4
2.12.1.9
2
15.36.34.5
69.3.38
deveria ser
1.96
1.96
1.96
1.96
1.96.22
1.96.22.34
1.96.77
2
2.12.1.9
2.30
2.30.65
2.30.65.37
4
4.2.57.92
5.1
5.4
5.65
5.65.15
5.65.15
5.65.80
5.65.80.5
6.5.7
6.5.7
6.5.7
6.5.7.43
6.5.7.79
6.5.7.79
6.53.19
6.53.19
6.53.19
6.53.19
6.53.19.1
6.53.19.1.24
6.53.19.1.24.49
7
7.5.82.8
8.1.91
8.1.91.7
8.1.91.7
8.1.91.7
8.1.91.7
8.1.91.7
8.1.91.7.3
8.1.91.7.39
8.7.63.8
8.12.88.56
8.81.22.8
9
9
9
9.20
9.84.1
12
14.2
15.36.34.5
19
19.89
20.4.64.4
20.4.64.4
20.4.64.4.12
20.4.64.4.12.7
28
33
59
59.73.33.2
61.8
63.1.98.17
63.1.98.17
63.1.98.17.7
63.1.98.17.7
63.1.98.17.7
63.1.98.17.7
63.1.98.17.7.9
63.1.98.17.7.68
63.29
69.3.38
72.6.56
74.1.60.57
74.1.60.57
74.1.60.57.6
84.56.8.5
86.98.30.79
95.8.8.79
95.8.8.79
96.5.33.9
mas deu
1.96
1.96
1.96
1.96
1.96.22
1.96.22.34
1.96.77
12
14.2
15.36.34.5
19
19.89
2
2.12.1.9
2.30
2.30.65
2.30.65.37
20.4.64.4
20.4.64.4
20.4.64.4.12
20.4.64.4.12.7
28
33
4
4.2.57.92
5.1
5.4
5.65
5.65.15
5.65.15
5.65.80
5.65.80.5
59
59.73.33.2
6.5.7
6.5.7
6.5.7
6.5.7.43
6.5.7.79
6.5.7.79
6.53.19
6.53.19
6.53.19
6.53.19
6.53.19.1
6.53.19.1.24
6.53.19.1.24.49
61.8
63.1.98.17
63.1.98.17
63.1.98.17.7
63.1.98.17.7
63.1.98.17.7
63.1.98.17.7
63.1.98.17.7.68
63.1.98.17.7.9
63.29
69.3.38
7
7.5.82.8
72.6.56
74.1.60.57
74.1.60.57
74.1.60.57.6
8.1.91
8.1.91.7
8.1.91.7
8.1.91.7
8.1.91.7
8.1.91.7
8.1.91.7.3
8.1.91.7.39
8.12.88.56
8.7.63.8
8.81.22.8
84.56.8.5
86.98.30.79
9
9
9
9.20
9.84.1
95.8.8.79
95.8.8.79
96.5.33.9

Teste 9 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
2.35.8
2.35.8.5
2.35.8.5
2.35.8.5
2.35.8.5.6
88
5
2.35.8.5.85
5
63.8
5.40
2.35.8.5
63.8
5
9.2.6.2
20.57.9.69
9.97.14
9.2.6.2.68
1.22.8.7
2.35.8.5.7
5
2.35.8.5.7
38.9
65
2.35.8.5.6
2
9.2.4
5.40.43
92.4.2.1
5.63
85
76
63.8.8
85
29.6
3.5
5.5
5.40.6
2.35.8.5.6
8.38
29.96.1.53
5.97
35.1.9.9
1.56.99.2
65.5
3.52.57.47
4.4.10
8.7
42
2.35.8.5
9.2.4
3
2.35.8.5.7
2.35.8.5.12
7.70.40
77
5
45.9.25.3
9.1
8.7.34
5.5
8.7.77
5.3.88
3
4.4.10
51.42.98
42
45.9.25.3.17
8.7
3.36.22
4.4.10
71
63.8.43
3
5.91.3
2.35.8.5
5.40.43
57
7.25
93.4.9
5.40.43.1
42.39
35.1.3.4
2.35.8.5.7.29
2.35.8.5
1.7
3.69.6.22
5.6.5.5
42.44
3.69.6.22
6.90.31.1
5.5
34
8.21
9.5
2.35.8.5.6.78
35.1.3.4
8.5.58.7
75.2.84
2.35.8.5.4
35.1.9.9
8.7
5
2.5
36.43.74
4.3.3.15
5.5
45.9.25.3.17
56.5.2
85
2
8.6.64.2
9.2.6.2
4
75.2.84
26.8
1.7.9
9.2.6.2.68.9
4.63.34
78.2.6.61
2
1.7.9
56.5.2.3
6.74.1.9
2.35.8.5.37
29.45.4.2
4
1.77.2.56
63.1.1
7
19.3.8.56
7.70.40.33
5.5.3
36.43.74
36.43.74.1
71.9.9.9
42.44.32
31.9
34.48.60
deveria ser
1.7
1.7.9
1.7.9
1.22.8.7
1.56.99.2
1.77.2.56
2
2
2
2.5
2.35.8
2.35.8.5
2.35.8.5
2.35.8.5
2.35.8.5
2.35.8.5
2.35.8.5
2.35.8.5
2.35.8.5.4
2.35.8.5.6
2.35.8.5.6
2.35.8.5.6
2.35.8.5.6.78
2.35.8.5.7
2.35.8.5.7
2.35.8.5.7
2.35.8.5.7.29
2.35.8.5.12
2.35.8.5.37
2.35.8.5.85
3
3
3
3.5
3.36.22
3.52.57.47
3.69.6.22
3.69.6.22
4
4
4.3.3.15
4.4.10
4.4.10
4.4.10
4.63.34
5
5
5
5
5
5
5.3.88
5.5
5.5
5.5
5.5
5.5.3
5.6.5.5
5.40
5.40.6
5.40.43
5.40.43
5.40.43.1
5.63
5.91.3
5.97
6.74.1.9
6.90.31.1
7
7.25
7.70.40
7.70.40.33
8.5.58.7
8.6.64.2
8.7
8.7
8.7
8.7.34
8.7.77
8.21
8.38
9.1
9.2.4
9.2.4
9.2.6.2
9.2.6.2
9.2.6.2.68
9.2.6.2.68.9
9.5
9.97.14
19.3.8.56
20.57.9.69
26.8
29.6
29.45.4.2
29.96.1.53
31.9
34
34.48.60
35.1.3.4
35.1.3.4
35.1.9.9
35.1.9.9
36.43.74
36.43.74
36.43.74.1
38.9
42
42
42.39
42.44
42.44.32
45.9.25.3
45.9.25.3.17
45.9.25.3.17
51.42.98
56.5.2
56.5.2.3
57
63.1.1
63.8
63.8
63.8.8
63.8.43
65
65.5
71
71.9.9.9
75.2.84
75.2.84
76
77
78.2.6.61
85
85
85
88
92.4.2.1
93.4.9
mas deu
1.22.8.7
1.56.99.2
1.7
1.7.9
1.7.9
1.77.2.56
19.3.8.56
2
2
2
2.35.8
2.35.8.5
2.35.8.5
2.35.8.5
2.35.8.5
2.35.8.5
2.35.8.5
2.35.8.5
2.35.8.5.12
2.35.8.5.37
2.35.8.5.4
2.35.8.5.6
2.35.8.5.6
2.35.8.5.6
2.35.8.5.6.78
2.35.8.5.7
2.35.8.5.7
2.35.8.5.7
2.35.8.5.7.29
2.35.8.5.85
2.5
20.57.9.69
26.8
29.45.4.2
29.6
29.96.1.53
3
3
3
3.36.22
3.5
3.52.57.47
3.69.6.22
3.69.6.22
31.9
34
34.48.60
35.1.3.4
35.1.3.4
35.1.9.9
35.1.9.9
36.43.74
36.43.74
36.43.74.1
38.9
4
4
4.3.3.15
4.4.10
4.4.10
4.4.10
4.63.34
42
42
42.39
42.44
42.44.32
45.9.25.3
45.9.25.3.17
45.9.25.3.17
5
5
5
5
5
5
5.3.88
5.40
5.40.43
5.40.43
5.40.43.1
5.40.6
5.5
5.5
5.5
5.5
5.5.3
5.6.5.5
5.63
5.91.3
5.97
51.42.98
56.5.2
56.5.2.3
57
6.74.1.9
6.90.31.1
63.1.1
63.8
63.8
63.8.43
63.8.8
65
65.5
7
7.25
7.70.40
7.70.40.33
71
71.9.9.9
75.2.84
75.2.84
76
77
78.2.6.61
8.21
8.38
8.5.58.7
8.6.64.2
8.7
8.7
8.7
8.7.34
8.7.77
85
85
85
88
9.1
9.2.4
9.2.4
9.2.6.2
9.2.6.2
9.2.6.2.68
9.2.6.2.68.9
9.5
9.97.14
92.4.2.1
93.4.9

Teste 10 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
6.7
6.7.94
85
6.7.79
6.7.79
6.7.79.9
73.3
6.7.79.92
6.7.79.9
6.7.94.94
12.2.7
9.6
73.3
6.7.79
73.3.9
6.7.79.9
5
6.7.94.94.36
6.7.79
5
2
6.7
73.3
5.9.5.24
5
85
2.5.4
6.7.79.9
6.7.79.9
7
2.5.4.6
6.7
6.7.79.9
8.6
2.77.63
5.30
2.5.4.4
2.5.4.4
45
deveria ser
2
2.5.4
2.5.4.4
2.5.4.4
2.5.4.6
2.77.63
5
5
5
5.9.5.24
5.30
6.7
6.7
6.7
6.7.79
6.7.79
6.7.79
6.7.79
6.7.79.9
6.7.79.9
6.7.79.9
6.7.79.9
6.7.79.9
6.7.79.9
6.7.79.92
6.7.94
6.7.94.94
6.7.94.94.36
7
8.6
9.6
12.2.7
45
73.3
73.3
73.3
73.3.9
85
85
mas deu
12.2.7
2
2.5.4
2.5.4.4
2.5.4.4
2.5.4.6
2.77.63
45
5
5
5
5.30
5.9.5.24
6.7
6.7
6.7
6.7.79
6.7.79
6.7.79
6.7.79
6.7.79.9
6.7.79.9
6.7.79.9
6.7.79.9
6.7.79.9
6.7.79.9
6.7.79.92
6.7.94
6.7.94.94
6.7.94.94.36
7
73.3
73.3
73.3
73.3.9
8.6
85
85
9.6

Teste 11 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 12 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 13 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 14 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 15 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 16 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 17 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 18 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 19 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 20 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Nota exercicio 10: 0.0
Procurando exercício 11...
Nota total: 9.00
{"scores": {"ex1": 1.0, "ex2": 1.0, "ex3": 1.0, "ex4": 1.0, "ex5": 1.0, "ex6": 1.0, "ex7": 1.0, "ex8": 1.0, "ex9": 1.0, "ex10": 0.0, "ex11": 0.0}}
