Versão do G++:
g++ (Debian 12.2.0-14) 12.2.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Varificando data de envio...
AGORA: 2024-10-28 01:49:49.193530-03:00
PRAZO MÁXIMO: 2024-11-06 23:59:59-03:06
Testando sua solucao...
Procurando exercício 1...
Exercício 1...
Compilando...
g++ -O2 -Wno-unused-result  "ex1.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 1: 1.0
Procurando exercício 2...
Exercício 2...
Compilando...
g++ -O2 -Wno-unused-result  "ex2.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 2: 1.0
Procurando exercício 3...
Exercício 3...
Compilando...
g++ -O2 -Wno-unused-result  "ex3.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 3: 1.0
Procurando exercício 4...
Exercício 4...
Compilando...
g++ -O2 -Wno-unused-result  "ex4.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.051
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 4: 1.0
Procurando exercício 5...
Exercício 5...
Compilando...
g++ -O2 -Wno-unused-result  "ex5.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 5: 1.0
Procurando exercício 6...
Exercício 6...
Compilando...
g++ -O2 -Wno-unused-result  "ex6.cpp" 
Teste 1: correto! +0.100
Teste 2: correto! +0.100
Teste 3 deu errado! +0.033
O resultado para
#include<iostream>
int main() {
    BigInt a(-20229274);
    a = a / (1072387992);
    a = a + BigInt(-1585041337);
    std::cout << a << std::endl;
    a = a + BigInt(1902774604);
    a = a / (-1952817453);
    a = a + BigInt(-987350503);
    a = a - BigInt(1804864530);
    a = a / (-313828639);
    a = a ^ BigInt(11);
    a = a / (-2008732625);
    a = a ^ BigInt(15);
    a = a - BigInt(2120038233);
    a = a * BigInt(-1764918083);
    a = a / (-1282377388);
    a = a * BigInt(1844975252);
    std::cout << a << std::endl;
    a = a - BigInt(1444871292);
    std::cout << a.abs() << std::endl;
    a = a + BigInt(-1015021642);
    return 0;
}
deveria ser
-1585041337
-8109689957648027744
8109689959092899036

mas deu
-1585041337
-5383230047650283252
5383230049095154544

Teste 4 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(-485177);
    a = a * BigInt(222704409);
    a = a ^ BigInt(23);
    a = a * BigInt(1966242806);
    std::cout << a << std::endl;
    a = a + BigInt(1071489281);
    a = a / (-1586535986);
    a = a ^ BigInt(10);
    a = a / (1854170742);
    a = a + BigInt(1695980711);
    a = a ^ BigInt(29);
    a = a * BigInt(1705205008);
    a = a + BigInt(1080838151);
    a = a ^ BigInt(21);
    std::cout << a.abs() << std::endl;
    return 0;
}
deveria ser
-116709068733878210432245504280995517661960848018112130112701843227692405738165534463053122765965702633275318877059634921994808061001490983409421422271156852251067499488613855712522093448964881843748183263859662047758273126497985496747449725751511738426509500802634085112536975083436812131183613635106130686187544906789686447633096342

mas deu
-338096197016048334486046244895849237351257512018875435217039100923240589646817380417385780481456276006971542


Teste 5 deu errado! +0.075
O resultado para
#include<iostream>
int main() {
    BigInt a(9554700);
    a = a * BigInt(-1851666425);
    std::cout << a << std::endl;
    a = a - BigInt(-739102339);
    std::cout << a << std::endl;
    a = a + BigInt(-707506931);
    a = a - BigInt(-806062464);
    std::cout << a.abs() << std::endl;
    a = a ^ BigInt(19);
    a = a * BigInt(-1521877048);
    a = a / (-1933645610);
    a = a - BigInt(-561632270);
    std::cout << a.abs() << std::endl;
    a = a * BigInt(61904844);
    a = a - BigInt(843381513);
    return 0;
}
deveria ser
-17692117190947500
-17692116451845161
17692116353289628
401623055988610020774540295400482785302009823913381676419900154930632331644408085093486613882783580475578551947898362670867824133239340155944933596268613154154861106482561264647458847264767369374130664068468356099288812428749200943260578731549795150085052881842422078250281016770139321849125314506650259098079

mas deu
-17692117190947500
-17692116451845161
17692116353289628
41838908054542486342442828183731879828138490971661629326323511930173242180999465669264365842671833102643429448927894537978968861203347333108338866000617799549191947300421649305660

Teste 6 deu errado! +0.067
O resultado para
#include<iostream>
int main() {
    BigInt a(10596042);
    a = a - BigInt(474738635);
    std::cout << a.abs() << std::endl;
    a = a - BigInt(-697996536);
    std::cout << a.abs() << std::endl;
    a = a ^ BigInt(29);
    a = a * BigInt(-853490677);
    std::cout << a.abs() << std::endl;
    a = a / (1910495121);
    a = a * BigInt(1311652089);
    a = a / (1951400503);
    a = a ^ BigInt(19);
    a = a + BigInt(925349854);
    std::cout << a.abs() << std::endl;
    return 0;
}
deveria ser
464142593
233853943
427164341986859441127500397607383127212166636158198228584279827948073090098616947771245827869501426432340497591021948774858353272736516121556161325204588506263102272814092233286205141334795255501656690544100013511961624819313748414414205918435272225411

mas deu
464142593
233853943
199592160130189411
204723447518552667507742131601425534790777846664299823652522390941857925123026682660898

Teste 7 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(-2755327);
    a = a ^ BigInt(14);
    a = a * BigInt(681705068);
    a = a ^ BigInt(19);
    std::cout << a << std::endl;
    a = a / (1338045169);
    std::cout << a.abs() << std::endl;
    a = a / (-2133229639);
    a = a + BigInt(-2046526031);
    a = a / (-443054820);
    std::cout << a.abs() << std::endl;
    a = a * BigInt(157263752);
    a = a + BigInt(-492826401);
    a = a ^ BigInt(27);
    std::cout << a.abs() << std::endl;
    return 0;
}
deveria ser




mas deu
14776165594703121293890799928598170714679789820024939143484775730476535063831946757598059463442432
11043099244359755461955410212761039246112169042945768554607572990293076618725078897241666
11684117088282975121436182351320733103846676076002183301837286775923729
6204025867541046876277923173991232778389070482286306562387594086247089054164591867172516336308024504554971523136446297200752339645726779303402765755787827729496610626238712078437253283608031233656331464852878901747815013026154484925943

Teste 8 deu errado! +0.029
O resultado para
#include<iostream>
int main() {
    BigInt a(10927647);
    a = a / (74403871);
    a = a - BigInt(1071950341);
    a = a * BigInt(2032516893);
    a = a / (2118241200);
    std::cout << a << std::endl;
    a = a * BigInt(681791538);
    std::cout << a.abs() << std::endl;
    a = a / (1731899975);
    a = a ^ BigInt(28);
    std::cout << a << std::endl;
    std::cout << a.abs() << std::endl;
    a = a * BigInt(141627893);
    std::cout << a << std::endl;
    a = a - BigInt(1944156550);
    std::cout << a.abs() << std::endl;
    a = a * BigInt(345007797);
    a = a - BigInt(173305395);
    std::cout << a << std::endl;
    return 0;
}
deveria ser
-1028568973
701269622040750474
10142433369653097322918694647136773805654299990922229642047565768391687346040483301081308089074827407839104895766827737588266749538275260820618686789936379732780931962648187301568471665382952613135591546062313917398648299907968587746766749696
10142433369653097322918694647136773805654299990922229642047565768391687346040483301081308089074827407839104895766827737588266749538275260820618686789936379732780931962648187301568471665382952613135591546062313917398648299907968587746766749696
1436451468036858314768915333184359756912409994104234511065340945556240677534475542633830286339524125110904109393440431768583121259064648044049675566485623065601666424446217467790498237198388616717237953977417966825746599763997684992760192321902870528
1436451468036858314768915333184359756912409994104234511065340945556240677534475542633830286339524125110904109393440431768583121259064648044049675566485623065601666424446217467790498237198388616717237953977417966825746599763997684992760192319958713978
495586956484812401979556043181456954587806094026684937034025402680255535757956798514477364761878412432865407460077889615207676476973760502257937525757931846035617412627056433545318254348199508603491638426536360482769917264817561212452154901605275040329581071

mas deu
-1028568973
701269622040750474
163954914948133156
163954914948133156
23220589151098303167720308
23220589151098301223563758
8011284308062525035584136463315731

Teste 9 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(1248861);
    a = a * BigInt(-1066024519);
    a = a ^ BigInt(22);
    std::cout << a << std::endl;
    std::cout << a.abs() << std::endl;
    a = a * BigInt(-1138456416);
    std::cout << a << std::endl;
    a = a * BigInt(-560867481);
    a = a / (-1056094250);
    a = a - BigInt(392347204);
    a = a * BigInt(-473817587);
    std::cout << a << std::endl;
    a = a * BigInt(117123143);
    a = a / (1578072546);
    a = a + BigInt(1339686900);
    return 0;
}
deveria ser
542236238787536049511909401035753620114818292830241800116731720820414886587033731995228801803186772420148782612890214368791388009158357405100792390079601824673763172067901235927437499115618305328922971579197130010066538127531888098896462041847186849478757323833316929657368490182639840859975328040999691285668840967090660612651544681
542236238787536049511909401035753620114818292830241800116731720820414886587033731995228801803186772420148782612890214368791388009158357405100792390079601824673763172067901235927437499115618305328922971579197130010066538127531888098896462041847186849478757323833316929657368490182639840859975328040999691285668840967090660612651544681
-617312325035378476398126926019870754214941542146755576174282776518722111416920894598392710800830350308050229240234108851765945844571798747858108223170097448025152790105214149695920931307169985508759347364122624788746394918197304250782719731241390360339917531025029373129851839324659338644257869809980809598188980850268007428151641814395123296
155336568504014486707647158705505808353228681366301666718902111288954871000743302679260758347360374183029016787223136003833113088825915025548638143666928100891836483729260146983487679253128149735818152019028319878809307457587163985927117595172166592573728353083937854911455698596930603847037990109301886701139351437271071493660902442433884964171062044

mas deu
9868482557232480752967523538936424925167225588235935474616802853865043532341656955290974281551907267484090879566278509921
9868482557232480752967523538936424925167225588235935474616802853865043532341656955290974281551907267484090879566278509921
-11234837283465404916812388212533198772158947843846574862839504350389769207513662864822034817723759265704291439769313066862482103136
2827063385158335690008913938831960842518764486443640693605020484994409943058396660328185165886661197850832449211202878380858923303525742340

Teste 10 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(7424004);
    a = a ^ BigInt(11);
    a = a / (1076340226);
    std::cout << a.abs() << std::endl;
    a = a / (1065796044);
    a = a - BigInt(95556668);
    std::cout << a.abs() << std::endl;
    a = a + BigInt(-680872996);
    a = a / (1983757388);
    a = a + BigInt(1979381232);
    std::cout << a.abs() << std::endl;
    a = a * BigInt(1681473366);
    return 0;
}
deveria ser
3508088959312009261017797346087668962317893945725410904544923528015
3291519966752671922112892873608441506204252664429395330563
1659235139671561451098622385374295330013500258012

mas deu
380158775570
95556312
1979381232

Teste 11: correto! +0.100
Teste 12 deu errado! +0.050
O resultado para
#include<iostream>
int main() {
    BigInt a(-18225791);
    a = a / (1209736972);
    a = a * BigInt(422421046);
    a = a - BigInt(-929665763);
    std::cout << a << std::endl;
    a = a ^ BigInt(22);
    a = a + BigInt(-1393227630);
    a = a * BigInt(-1421880543);
    std::cout << a << std::endl;
    a = a / (929804062);
    a = a ^ BigInt(26);
    std::cout << a.abs() << std::endl;
    return 0;
}
deveria ser
929665763
-285794281134285211854094485291998076400617711429401777307734540216335639071402734403315179346419491570411371164924053362635814127780565491577001233298683984657676209304075745511642723042337739385262443924277

mas deu
929665763
-793373719834119438857157774404635679970518171842252919543770481490170856557314413
530084964190357079463279459447087897436934846798022653578856292608863291571550890140254416637469746682869380211009051776837439501475259621243045359248504960451402689438068913044257534623558159898372706049161101440348339738315021847347908453803559236348538372665568577115019408414189890576

Teste 13: correto! +0.100
Teste 14 deu errado! +0.050
O resultado para
#include<iostream>
int main() {
    BigInt a(-12559765);
    std::cout << a.abs() << std::endl;
    a = a / (-2037775440);
    a = a * BigInt(-428296280);
    a = a + BigInt(2041485600);
    a = a / (-1006681788);
    a = a - BigInt(209054981);
    a = a * BigInt(-275777380);
    std::cout << a.abs() << std::endl;
    a = a + BigInt(1022892430);
    a = a / (-2066216465);
    a = a - BigInt(-317555102);
    a = a + BigInt(275096155);
    a = a ^ BigInt(30);
    a = a / (1258134027);
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    a = a - BigInt(-1306419465);
    a = a * BigInt(-1981641944);
    return 0;
}
deveria ser
12559765
57652635487684540
28571382628048064103666477593848875660826207827336943971647055362918561184991898364542080303743748554088036076583796111008566950230468666532114729630486186696060493471396564290199407217373826403949245148954992099341515740904218330080017064440175573024707
28571382628048064103666477593848875660826207827336943971647055362918561184991898364542080303743748554088036076583796111008566950230468666532114729630486186696060493471396564290199407217373826403949245148954992099341515740904218330080017064440175573024707

mas deu
12559765
57652635487684540
0
0

Teste 15 deu errado! +0.086
O resultado para
#include<iostream>
int main() {
    BigInt a(14946362);
    a = a * BigInt(1189634609);
    a = a - BigInt(2034705098);
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    a = a - BigInt(-1253511021);
    std::cout << a << std::endl;
    a = a - BigInt(1254104304);
    std::cout << a << std::endl;
    a = a * BigInt(-1957288310);
    a = a - BigInt(859857856);
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    a = a ^ BigInt(21);
    a = a / (-197408914);
    std::cout << a.abs() << std::endl;
    a = a + BigInt(-749919783);
    a = a * BigInt(-1554401680);
    a = a + BigInt(-1250951589);
    return 0;
}
deveria ser
17780707479137360
17780707479137360
17780708732648381
17780707478544077
34801970891283898591697726
-34801970891283898591697726


mas deu
17780707479137360
17780707479137360
17780708732648381
17780707478544077
34801970891283898591697726
-34801970891283898591697726
379374202581970328493041862658348418687021266582471012064611428997013518889521521888340099657238522001660770708881882228511851259233742361155378949859933851316618812592390495513921344568081178761194909821699129032859965533

Teste 16 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(749804);
    a = a + BigInt(-1391772072);
    a = a * BigInt(-509425692);
    a = a ^ BigInt(27);
    a = a * BigInt(1922446686);
    a = a - BigInt(-185441749);
    a = a / (-1125083402);
    a = a - BigInt(-1681057617);
    a = a + BigInt(447453450);
    std::cout << a.abs() << std::endl;
    a = a / (1260015749);
    a = a ^ BigInt(12);
    a = a / (-1004914656);
    a = a * BigInt(-952179754);
    a = a / (1387468952);
    a = a * BigInt(-360408575);
    std::cout << a.abs() << std::endl;
    return 0;
}
deveria ser
156268916656705675691940202729068430246962632080837694896928469914446778914890292828252193212820769142257072001477394421700892378302843149512130377226834264919920605010719908412086984631250210108172829258186887134376328455013785969054861358068672010017584496296770966787591154393165344456793441210111406575059598066371502078644008168094309861352200667912136967169957627907214026146622985137488574298837324040307685877654467585379424155137795735401486382416312496766110648116706620735

mas deu
608015101706623434230923907651717565816516048819990987
57311053309522334260780979013776763102353991158758226347316897996438076530109934939099225

Teste 17 deu errado! +0.050
O resultado para
#include<iostream>
int main() {
    BigInt a(-10239259);
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    std::cout << a.abs() << std::endl;
    a = a - BigInt(1953998153);
    a = a ^ BigInt(17);
    std::cout << a.abs() << std::endl;
    a = a * BigInt(109580818);
    a = a ^ BigInt(12);
    std::cout << a.abs() << std::endl;
    a = a / (449177295);
    a = a + BigInt(347690887);
    std::cout << a << std::endl;
    a = a - BigInt(1313480195);
    a = a ^ BigInt(11);
    a = a - BigInt(1840759500);
    a = a * BigInt(-789815610);
    std::cout << a.abs() << std::endl;
    return 0;
}
deveria ser
10239259
-10239259
10239259
96448979388139680108395352178491360668229519528627852245389902211656425937098971317075941686771399278948323290012704959456172158661055649756740129226376609792



mas deu
10239259
-10239259
10239259
6479205012117404673495551185278169236676589688711604404910799720620097892262043607908037773273609490262973711755637686272
504095151020546404296078706381019185250170951746460603836535428218523853213466301245713296106241736620034446755601060834058583988841337798863103908247305988991683592650042232065937490694332076713430705886276251944635132579604171039006853274938853523525206016
1122263205713784808059095476722658444368099575795478718122952826942251952457806891698996709319961812896251683326070746372117014482758612718532676297111825273785674301836744067987535947680374353546589450578253853959014407840013754566572322572749427095


#include<iostream>
int main() {
    BigInt a(-5910707);
    a = a ^ BigInt(13);
    std::cout << a << std::endl;
    a = a / (-2003729374);
    a = a - BigInt(-1755166109);
    a = a ^ BigInt(15);
    a = a * BigInt(1812099130);
    std::cout << a.abs() << std::endl;
    a = a + BigInt(-1181646101);
    std::cout << a.abs() << std::endl;
    a = a ^ BigInt(20);
    a = a - BigInt(1971772051);
    a = a / (-505662404);
    a = a - BigInt(-1352699529);
    a = a + BigInt(265080927);
    a = a ^ BigInt(25);
    a = a * BigInt(-2076322863);
    a = a ^ BigInt(20);
    a = a * BigInt(-276622190);
    a = a / (1937909474);
    a = a * BigInt(1640570591);
    return 0;
}
Teste 18 deu errado!

Tempo limite (30 s) excedido
Teste 19 deu errado! +0.050
O resultado para
#include<iostream>
int main() {
    BigInt a(-14894394);
    a = a + BigInt(-1351384737);
    a = a - BigInt(-1011727387);
    a = a * BigInt(1303424200);
    std::cout << a << std::endl;
    a = a ^ BigInt(23);
    std::cout << a.abs() << std::endl;
    a = a * BigInt(131638023);
    a = a ^ BigInt(13);
    std::cout << a << std::endl;
    return 0;
}
deveria ser
-462131323281804800
19480690133335386019964055720381229942363547929271848431542429435405271762662930293532543083514654485683249501308219628103684393318287742569155143410377476126253379472136778068227737653208761396176685930060024025961229933231971667955854816076513687817499501832557765338462068201313714181375535135764804105420816499773943566263141183035658631585875121359730769920000000000000000000000000000000000000000000000

mas deu
-462131323281804800
4501506090840919683487301123775766622785775380080512312923270553133704156913297459716378535692745742627320627200000000000000
-592569362320757074636054065539520213532906223555872221700376686308637269882948260007986211158227985001127313151728025600000000000000

Teste 20 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(-5000487);
    a = a / (-1128460668);
    a = a + BigInt(1650840530);
    a = a ^ BigInt(23);
    a = a * BigInt(423058805);
    a = a - BigInt(-1460987431);
    a = a ^ BigInt(19);
    std::cout << a.abs() << std::endl;
    a = a ^ BigInt(29);
    a = a * BigInt(215099450);
    a = a - BigInt(1160435080);
    a = a / (185980842);
    std::cout << a.abs() << std::endl;
    return 0;
}
deveria ser
10933335441735003198042173779968117787753767439185040902476418428598053384473148011294911285888480412937922769898922392474582702103541881327065214834179345735924908000487995498562016778042726252717678351903960052392304960400281881776505487892250940171512806100579814227549155467009717265040786547807435026390608977356408921975811950261144050812607639367186928582873119652618096277942766075402350489829794121938607326482678799136974324481249425243609421082340465766993920186499805979984180882684244232586055321909602563245754473058315067464255581631360126391108691349113716544969501557156188355373913883074024338568915636538383638169289527891194668524496626119154084839609216520982698336762703580281205739512642620907963622851694331239086371845116877620872622550255441134126243408962749480152095769233688228140905712293964869421596780339024608221610815944886743910947418201283642385873814714369434860878244574429539287131916594594877903398417672955889363800797902272801761073066629014266957358262133781414228890157443655502715153271191048769081789653820609792116942866866295770733295481775166420757650136106536498521981270958945882371682026577265439917074606804225628259198927180477964475257865064559629345773893009043246781540705081953993787900110652300975647422563767158977495408060111026907694369857615155560540119923235999587462433528538444264305306197360065786304356213090355188793828160731979050412163502904582597604725104193049715009799360309790441435756634799047854235987737134098518787253606094438560243802085883537198241301623515354156393741897103853016106477351733917445336756134288894044736922311286312727744058875615880362834348967056042710339377205636141589224155437179824685757530407026287302645358020471311769199316114087978390348457830908659795969673908288228128667656935685676294933816924007895469425921354744013373501132307375019435942941474221328544525516412516787982184493527208109383900580694121312907156229589982653624557853640348957646899980672625306574377797619981362049813768594041546537087975584903427315937501368366400076531198017851779570302762456424001628108489097290978218587410694444522676831768662611873668258144914630195138761512387337554649010791985549974897248132684436627956552730355056639430889129063704289419804862659936362851208118034076147609117326060193327510466836749416706287153313218798306114250090767311609280449519026300944992360995066236572032049549322840834639492879092096866716285490804899504512634008468299944820593830268082252494566569086777398657679176704089213512096854751279572523634959024024740261691140262501016770449770874287558735517442468367716775959783730245263603359616540849368487182271725452131853290299927555581785051270527127766307875486173241201574525781497653557344437646160628805008371711659611426989778279042712038719722360804870733369999705753777660123581391337324107144307250017588346840246731006427574728490168046557005727318708576535493680934796997323574432105878338157736190783365650211358873532898524127421749482328950952355948532514796406508821673022872245045442866588033090218348977041358294950687640147034110852216718938029393310077220285301157831151144432406363793980756699105407264043762358285592677419219482327815200084972546038381209671093429310596981926444760522092949673011432886613492230081367862672914073118388446359852287017764297915990922035115001209749031285516540673807864582899917584728791256261201124560912162363440432080455207147295618013758649781960543176306159373481285004987109877650941880619619870281768015932901446029087724310368202252862558918395761068612191753937213402234974978017309890576803759914073131781935747858544160321663183839491345210149402057944733815503391238317100655487723438631112532076424878281490461228435612278493022519657327096467988105741150708841386550127515575760347155579391551176924041979302138681501048770161496681565222326064881871687926634293859272442626100342706361682789623558961793629331853537474743612284048170101210967434909416007238220800835023700165065213187923206404844219853296754320505516614559493120585429600638655706636417390875153395728673505466309299540595670931709631306634161709925644960488263861074196685649938004039570705787052393381986740725142071

mas deu



Nota exercicio 6: 0.4
Procurando exercício 7...
Exercício 7...
Compilando...
g++ -O2 -Wno-unused-result  "ex7.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 7: 1.0
Procurando exercício 8...
Exercício 8...
ERRO: Somente os seguintes membros devem ser protegidos 
Sua implementação tem: _imag
Nota exercicio 8: 0.0
Nota total: 6.40
{"scores": {"ex1": 1.0, "ex2": 1.0, "ex3": 1.0, "ex4": 1.0, "ex5": 1.0, "ex6": 0.4, "ex7": 1.0, "ex8": 0.0}}
